#!/usr/bin/env ruby
require 'nokogiri'         
require 'json'
require 'open-uri'

page = Nokogiri::HTML(open("https://www.terraform.io/docs/providers"))
provider = []

page.css(".nav a").each do |x|
  if x['href'] =~ /docs\/providers\/.*\/index.html/ then
    provider.push(x['href'])
  end
end

provider.each do |i|
  page = Nokogiri::HTML(open("https://www.terraform.io#{i}"))
  provider_name = i.split('/')[-2]
  arguments = []
  provider_arguments = []

  puts "Starting Provider of #{provider_name}"

  page.css("#argument-reference ~ ul:first-of-type > li").each do |i|
    name = i.css('a').text()
    info = i.text()
    if not name.nil? then
      name = (not name.include? "-") ? name : name.split("-")[0]
      provider_arguments.push({ 'word' => name, "info" => info})
    end
  end



  page.css(".docs-sidenav a").each do |x| 
    if not x['href'] == '#' then
      if not x['href'] == "/docs/providers/#{provider_name}/index.html" then
        if not x['href'] == '/docs/providers/index.html' then
          arguments.push(x['href'])
        end
      end
    end
  end

  result = {}

  result["provider_arguments"] = provider_arguments

  arguments.each do |x|
    page = Nokogiri::HTML(open("https://www.terraform.io#{x}"))

    arguments = []
    attributes = []

    page.css("#argument-reference ~ ul:first-of-type > li").each do |i|
      begin 
        begin
          name = i.css("a[name]")[0]['name']
        rescue
          name = i.css("a[href]")[0]['href']
        end
        info = i.text()
        if not name.nil? then
          name = (not name.include? "-") ? name : name.split("-")[0]
          arguments.push({ 'word' => name, "info" => info})
        end
      rescue
      end
    end

    page.css("#attributes-reference ~ ul:first-of-type li").each do |i|
      begin 
        begin
          name = i.css("a[name]")[0]['name']
        rescue
          name = i.css("a[href]")[0]['href']
        end
        info = i.text()
        if not name.nil? then
          name = (not name.include? "-") ? name : name.split("-")[0]
          attributes.push({ 'word' => name, "info" => info})
        end
      rescue
      end
    end

    page.css("#attribute-reference ~ ul:first-of-type li").each do |i|
      begin 
        begin
          name = i.css("a[name]")[0]['name']
        rescue
          name = i.css("a[href]")[0]['href']
        end
        info = i.text()
        if not name.nil? then
          name = (not name.include? "-") ? name : name.split("-")[0]
          attributes.push({ 'word' => name, "info" => info})
        end
      rescue
      end
    end

    name = x.split('/')[-1].split(".html")[0]
    result[name] = { "provider" => provider_name, "arguments" => arguments, "attributes" => attributes }
    puts "Finish #{name} of #{provider_name}"
  end

  if provider_name == "do" then 
    provider_name = "digitalocean"
  end

  File.open("provider_json/#{provider_name}.json", 'w') { |file| file.write(JSON.generate(result)) }
end
