{"provider_arguments":[{"word":"host","info":"host - (Optional) The hostname (in form of URI) of Kubernetes master. Can be sourced from KUBE_HOST. Defaults to https://localhost.\n"},{"word":"username","info":"username - (Optional) The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint. Can be sourced from KUBE_USER.\n"},{"word":"password","info":"password - (Optional) The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint. Can be sourced from KUBE_PASSWORD.\n"},{"word":"insecure","info":"insecure- (Optional) Whether server should be accessed without verifying the TLS certificate. Can be sourced from KUBE_INSECURE. Defaults to false.\n"},{"word":"client_certificate","info":"client_certificate - (Optional) PEM-encoded client certificate for TLS authentication. Can be sourced from KUBE_CLIENT_CERT_DATA.\n"},{"word":"client_key","info":"client_key - (Optional) PEM-encoded client certificate key for TLS authentication. Can be sourced from KUBE_CLIENT_KEY_DATA.\n"},{"word":"cluster_ca_certificate","info":"cluster_ca_certificate - (Optional) PEM-encoded root certificates bundle for TLS authentication. Can be sourced from KUBE_CLUSTER_CA_CERT_DATA.\n"},{"word":"config_path","info":"config_path - (Optional) Path to the kube config file. Can be sourced from KUBE_CONFIG. Defaults to ~/.kube/config.\n"},{"word":"config_context","info":"config_context - (Optional) Context to choose from the config file. Can be sourced from KUBE_CTX.\n"},{"word":"config_context_auth_info","info":"config_context_auth_info - (Optional) Authentication info context of the kube config (name of the kubeconfig user, --user flag in kubectl). Can be sourced from KUBE_CTX_AUTH_INFO.\n"},{"word":"config_context_cluster","info":"config_context_cluster - (Optional) Cluster context of the kube config (name of the kubeconfig cluster, --cluster flag in kubectl). Can be sourced from KUBE_CTX_CLUSTER.\n"}],"resources":{"config_map":{"provider":"kubernetes","arguments":[{"word":"data","info":"data - (Optional) A map of the configuration data.\n"},{"word":"metadata","info":"metadata - (Required) Standard config map's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata\n"}],"attributes":[]},"namespace":{"provider":"kubernetes","arguments":[{"word":"metadata","info":"metadata - (Required) Standard namespace's metadata.\n"}],"attributes":[]},"persistent_volume":{"provider":"kubernetes","arguments":[{"word":"metadata","info":"metadata - (Required) Standard persistent volume's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata\n"},{"word":"spec","info":"spec - (Required) Spec of the persistent volume owned by the cluster. See below.\n"}],"attributes":[]},"persistent_volume_claim":{"provider":"kubernetes","arguments":[{"word":"metadata","info":"metadata - (Required) Standard persistent volume claim's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata\n"},{"word":"spec","info":"spec - (Required) Spec defines the desired characteristics of a volume requested by a pod author. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims\n"},{"word":"wait_until_bound","info":"wait_until_bound - (Optional) Whether to wait for the claim to reach Bound state (to find volume in which to claim the space)\n"}],"attributes":[]},"secret":{"provider":"kubernetes","arguments":[{"word":"data","info":"data - (Optional) A map of the secret data.\n"},{"word":"metadata","info":"metadata - (Required) Standard secret's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata\n"},{"word":"type","info":"type - (Optional) The secret type. Defaults to Opaque. More info: https://github.com/kubernetes/community/blob/master/contributors/design-proposals/secrets.md#proposed-design\n"}],"attributes":[]}},"datas":{},"unknowns":{}}