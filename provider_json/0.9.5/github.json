{"provider_arguments":[{"word":"token","info":"token - (Optional) This is the GitHub personal access token. It must be provided, but\nit can also be sourced from the GITHUB_TOKEN environment variable.\n"},{"word":"organization","info":"organization - (Optional) This is the target GitHub organization to manage. The account\ncorresponding to the token will need \"owner\" privileges for this organization. It must be provided, but\nit can also be sourced from the GITHUB_ORGANIZATION environment variable.\n"},{"word":"base_url","info":"base_url - (Optional) This is the target GitHub base API endpoint. Providing a value is a\nrequirement when working with GitHub Enterprise.  It is optional to provide this value and\nit can also be sourced from the GITHUB_BASE_URL environment variable.  The value must end with a slash.\n"}],"resources":{"branch_protection":{"provider":"github","arguments":[{"word":"repository","info":"repository - (Required) The GitHub repository name.\n"},{"word":"branch","info":"branch - (Required) The Git branch to protect.\n"},{"word":"required_status_checks","info":"required_status_checks - (Optional) Enforce restrictions for required status checks. See Required Status Checks below for details.\n","subblock":[{"word":"include_admins","info":"include_admins: (Optional) Enforce required status checks for repository administrators. Defaults to false.\n"},{"word":"strict","info":"strict: (Optional) Require branches to be up to date before merging. Defaults to false.\n"},{"word":"contexts","info":"contexts: (Optional) The list of status checks to require in order to merge into this branch. No status checks are required by default.\n"}],"kind":"subblock"},{"word":"required_pull_request_reviews","info":"required_pull_request_reviews - (Optional) Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.\n","subblock":[{"word":"include_admins","info":"include_admins: (Optional) Enforce required status checks for repository administrators. Defaults to false.\n"}],"kind":"subblock"},{"word":"restrictions","info":"restrictions - (Optional) Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.\n","subblock":[],"kind":"subblock"}],"attributes":[]},"membership":{"provider":"github","arguments":[{"word":"username","info":"username - (Required) The user to add to the organization.\n"},{"word":"role","info":"role - (Optional) The role of the user within the organization.\n        Must be one of member or admin. Defaults to member.\n"}],"attributes":[]},"organization_webhook":{"provider":"github","arguments":[{"word":"name","info":"name - (Required) The type of the webhook. See a list of available hooks."},{"word":"events","info":"events - (Required) A list of events which should trigger the webhook. Defaults to [\"push\"]. See a list of available events"},{"word":"config","info":"config - (Required) key/value pair of configuration for this webhook. Available keys are url, content_type, secret and insecure_ssl."},{"word":"active","info":"active - (Optional) Indicate of the webhook should receive events. Defaults to true."}],"attributes":[{"word":"url","info":"url - URL of the webhook\n"}]},"repository":{"provider":"github","arguments":[{"word":"name","info":"name - (Required) The name of the repository.","subblock":[],"kind":"subblock"},{"word":"description","info":"description - (Optional) A description of the repository."},{"word":"homepage_url","info":"homepage_url - (Optional) URL of a page describing the project."},{"word":"private","info":"private - (Optional) Set to true to create a private repository.\nRepositories are created as public (e.g. open source) by default."},{"word":"has_issues","info":"has_issues - (Optional) Set to true to enable the Github Issues features\non the repository."},{"word":"has_wiki","info":"has_wiki - (Optional) Set to true to enable the Github Wiki features on\nthe repository."},{"word":"has_downloads","info":"has_downloads - (Optional) Set to true to enable the (deprecated)\ndownloads features on the repository."},{"word":"auto_init","info":"auto_init - (Optional) Meaningful only during create; set to true to\nproduce an initial commit in the repository."}],"attributes":[{"word":"full_name","info":"full_name - A string of the form \"orgname/reponame\".\n"},{"word":"default_branch","info":"default_branch - The name of the repository's default branch.\n"},{"word":"ssh_clone_url","info":"ssh_clone_url - URL that can be provided to git clone to clone the\nrepository via SSH.\n"},{"word":"http_clone_url","info":"http_clone_url - URL that can be provided to git clone to clone the\nrepository via HTTPS.\n"},{"word":"git_clone_url","info":"git_clone_url - URL that can be provided to git clone to clone the\nrepository anonymously via the git protocol.\n"},{"word":"svn_url","info":"svn_url - URL that can be provided to svn checkout to check out\nthe repository via Github's Subversion protocol emulation.\n"}]},"repository_collaborator":{"provider":"github","arguments":[{"word":"repository","info":"repository - (Required) The GitHub repository\n"},{"word":"username","info":"username - (Required) The user to add to the repository as a collaborator.\n"},{"word":"permission","info":"permission - (Optional) The permission of the outside collaborator for the repository.\n        Must be one of pull, push, or admin. Defaults to push.\n"}],"attributes":[]},"repository_webhook":{"provider":"github","arguments":[{"word":"name","info":"name - (Required) The type of the webhook. See a list of available hooks."},{"word":"repository","info":"repository - (Required) The repository of the webhook."},{"word":"events","info":"events - (Required) A list of events which should trigger the webhook. Defaults to [\"push\"]. See a list of available events"},{"word":"config","info":"config - (Required) key/value pair of configuration for this webhook. Available keys are url, content_type, secret and insecure_ssl."},{"word":"active","info":"active - (Optional) Indicate of the webhook should receive events. Defaults to true."}],"attributes":[{"word":"url","info":"url - URL of the webhook\n"}]},"team":{"provider":"github","arguments":[{"word":"name","info":"name - (Required) The name of the team.\n"},{"word":"description","info":"description - (Optional) A description of the team.\n"},{"word":"privacy","info":"privacy - (Optional) The level of privacy for the team. Must be one of secret or closed.\n           Defaults to secret.\n"}],"attributes":[{"word":"id","info":"id - The ID of the created team.\n"}]},"team_membership":{"provider":"github","arguments":[{"word":"team_id","info":"team_id - (Required) The GitHub team id\n"},{"word":"username","info":"username - (Required) The user to add to the team.\n"},{"word":"role","info":"role - (Optional) The role of the user within the team.\n        Must be one of member or maintainer. Defaults to member.\n"}],"attributes":[]},"team_repository":{"provider":"github","arguments":[{"word":"team_id","info":"team_id - (Required) The GitHub team id\n"},{"word":"repository","info":"repository - (Required) The repository to add to the team.\n"},{"word":"permission","info":"permission - (Optional) The permissions of team members regarding the repository.\nMust be one of pull, push, or admin. Defaults to pull.\n"}],"attributes":[]},"issue_label":{"provider":"github","arguments":[{"word":"repository","info":"repository - (Required) The GitHub repository"},{"word":"name","info":"name - (Required) The name of the label."},{"word":"color","info":"color - (Required) A 6 character hex code, without the leading #, identifying the color of the label."}],"attributes":[]}},"datas":{},"unknowns":{}}