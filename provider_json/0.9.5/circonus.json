{"provider_arguments":[{"word":"key","info":"key - (Required) The Circonus API Key.\n"},{"word":"api_url","info":"api_url - (Optional) The API URL to use to talk with. The default is https://api.circonus.com/v2.\n"}],"resources":{"check":{"provider":"circonus","arguments":[{"word":"active","info":"active - (Optional) Whether or not the check is enabled or not (default\ntrue)."},{"word":"caql","info":"caql - (Optional) A Circonus Analytics Query Language\n(CAQL) check.  See below for\ndetails on how to configure a caql check.","subblock":[],"kind":"subblock"},{"word":"cloudwatch","info":"cloudwatch - (Optional) A CloudWatch\ncheck check.\nSee below for details on how to configure a cloudwatch check.","subblock":[],"kind":"subblock"},{"word":"collector","info":"collector - (Required) A collector ID.  The collector(s) that are\nresponsible for running a circonus_check. The id can be the Circonus ID\nfor a Circonus collector (a.k.a. \"broker\") running in the cloud or an\nenterprise collector running in your datacenter.  One collection of metrics\nwill be automatically created for each collector specified."},{"word":"consul","info":"consul - (Optional) A native Consul check.  See below for details on how to\nconfigure a consul check.","subblock":[],"kind":"subblock"},{"word":"http","info":"http - (Optional) A poll-based HTTP check.  See below for details on how to configure\nthe http check.","subblock":[{"word":"auth_method","info":"auth_method - (Optional) HTTP Authentication method to use.  When set must\nbe one of the values Basic, Digest, or Auto.\n"},{"word":"auth_password","info":"auth_password - (Optional) The password to use during authentication.\n"},{"word":"auth_user","info":"auth_user - (Optional) The user to authenticate as.\n"},{"word":"body_regexp","info":"body_regexp - (Optional) This regular expression is matched against the body\nof the response. If a match is not found, the check will be marked as \"bad.\"\n"},{"word":"ca_chain","info":"ca_chain - (Optional) A path to a file containing all the certificate\nauthorities that should be loaded to validate the remote certificate (for TLS\nchecks).\n"},{"word":"certificate_file","info":"certificate_file - (Optional) A path to a file containing the client\ncertificate that will be presented to the remote server (for TLS checks).\n"},{"word":"ciphers","info":"ciphers - (Optional) A list of ciphers to be used in the TLS protocol (for\nHTTPS checks).\n"},{"word":"code","info":"code - (Optional) The HTTP code that is expected. If the code received does\nnot match this regular expression, the check is marked as \"bad.\"\n"},{"word":"extract","info":"extract - (Optional) This regular expression is matched against the body of\nthe response globally. The first capturing match is the key and the second\ncapturing match is the value. Each key/value extracted is registered as a\nmetric for the check.\n"},{"word":"headers","info":"headers - (Optional) A map of the HTTP headers to be sent when executing the\ncheck.\n"},{"word":"key_file","info":"key_file - (Optional) A path to a file containing key to be used in\nconjunction with the cilent certificate (for TLS checks).\n"},{"word":"method","info":"method - (Optional) The HTTP Method to use.  Defaults to GET.\n"},{"word":"payload","info":"payload - (Optional) The information transferred as the payload of an HTTP\nrequest.\n"},{"word":"read_limit","info":"read_limit - (Optional) Sets an approximate limit on the data read (0\nmeans no limit). Default 0.\n"},{"word":"redirects","info":"redirects - (Optional) The maximum number of HTTP Location header\nredirects to follow. Default 0.\n"},{"word":"url","info":"url - (Required) The target for this json check.  The url must include\nthe scheme, host, port (optional), and path to use\n(e.g. https://app1.example.org/healthz)\n"},{"word":"version","info":"version - (Optional) The HTTP version to use.  Defaults to 1.1.\n"}],"kind":"subblock"},{"word":"httptrap","info":"httptrap - (Optional) An push-based HTTP check.  This check method expects\nclients to send a specially crafted HTTP JSON payload.  See below for details\non how to configure the httptrap check.","subblock":[],"kind":"subblock"},{"word":"icmp_ping","info":"icmp_ping - (Optional) An ICMP ping check.  See below for details on how to\nconfigure the icmp_ping check.","subblock":[{"word":"availability","info":"availability - (Optional) The percentage of ping packets that must be\nreturned for this measurement to be considered successful.  Defaults to\n100.0.\n"},{"word":"count","info":"count - (Optional) The number of ICMP ping packets to send.  Defaults to\n5.\n"},{"word":"interval","info":"interval - (Optional) Interval between packets.  Defaults to 2s.\n"}],"kind":"subblock"},{"word":"json","info":"json - (Optional) A JSON check.  See below for details on how to configure\nthe json check.","subblock":[],"kind":"subblock"},{"word":"metric","info":"metric - (Required) A list of one or more metric configurations.  All\nmetrics obtained from this check instance will be available as individual\nmetric streams.  See below for a list of supported metric attrbutes.","subblock":[{"word":"active","info":"active - (Optional) Whether or not the metric is active or not.  Defaults to true.\n"},{"word":"name","info":"name - (Optional) The name of the metric.  A string containing freeform text.\n"},{"word":"tags","info":"tags - (Optional) A list of tags assigned to the metric.\n"},{"word":"type","info":"type - (Required) A string containing either numeric, text, histogram, composite, or caql.\n"},{"word":"units","info":"units - (Optional) The unit of measurement the metric represents (e.g., bytes, seconds, milliseconds). A string containing freeform text.\n"}],"kind":"subblock"},{"word":"metric_limit","info":"metric_limit - (Optional) Setting a metric limit will tell the Circonus\nbackend to periodically look at the check to see if there are additional\nmetrics the collector has seen that we should collect. It will not reactivate\nmetrics previously collected and then marked as inactive. Values are 0 to\ndisable, -1 to enable all metrics or N+ to collect up to the value N\n(both -1 and N+ can not exceed other account restrictions)."},{"word":"mysql","info":"mysql - (Optional) A MySQL check.  See below for details on how to configure\nthe mysql check.","subblock":[{"word":"dsn","info":"dsn - (Required) The MySQL DSN/connect\nstring to\nuse to talk to MySQL.\n"},{"word":"query","info":"query - (Required) The SQL query to execute.\n"}],"kind":"subblock"},{"word":"name","info":"name - (Optional) The name of the check that will be displayed in the web\ninterface."},{"word":"notes","info":"notes - (Optional) Notes about this check."},{"word":"period","info":"period - (Optional) The period between each time the check is made in\nseconds.","subblock":[],"kind":"subblock"},{"word":"postgresql","info":"postgresql - (Optional) A PostgreSQL check.  See below for details on how to\nconfigure the postgresql check.","subblock":[{"word":"dsn","info":"dsn - (Required) The PostgreSQL DSN/connect\nstring to\nuse to talk to PostgreSQL.\n"},{"word":"query","info":"query - (Required) The SQL query to execute.\n"}],"kind":"subblock"},{"word":"statsd","info":"statsd - (Optional) A statsd check.  See below for details on how to\nconfigure the statsd check.","subblock":[],"kind":"subblock"},{"word":"tags","info":"tags - (Optional) A list of tags assigned to this check."},{"word":"target","info":"target - (Required) A string containing the location of the thing being\nchecked.  This value changes based on the check type.  For example, for an\nhttp check type this would be the URL you're checking. For a DNS check it\nwould be the hostname you wanted to look up.","subblock":[{"word":"dsn","info":"dsn - (Required) The PostgreSQL DSN/connect\nstring to\nuse to talk to PostgreSQL.\n"},{"word":"query","info":"query - (Required) The SQL query to execute.\n"}],"kind":"subblock"},{"word":"tcp","info":"tcp - (Optional) A TCP check.  See below for details on how to configure the\ntcp check (includes TLS support).","subblock":[],"kind":"subblock"},{"word":"timeout","info":"timeout - (Optional) A floating point number representing the maximum number\nof seconds this check should wait for a result.  Defaults to 10.0."}],"attributes":[]},"contact_group":{"provider":"circonus","arguments":[{"word":"aggregation_window","info":"aggregation_window - (Optional) The aggregation window for batching up alert\nnotifications."},{"word":"alert_option","info":"alert_option - (Optional) There is one alert_option per severity, where\nseverity can be any number between 1 (high) and 5 (low).  If configured, the\nalerting system will remind or escalate alerts to further contact groups if an\nalert sent to this contact group is not acknowledged or resolved.  See below\nfor details.","subblock":[{"word":"escalate_after","info":"escalate_after - (Optional) How long to wait before escalating an alert that\nis received at a given severity.\n"},{"word":"escalate_to","info":"escalate_to - (Optional) The Contact Group ID who will receive the\nescalation.\n"},{"word":"reminder","info":"reminder - (Optional) If specified, reminders will be sent after a user\nconfigurable number of minutes for open alerts.\n"},{"word":"severity","info":"severity - (Required) An alert_option must be assigned to a given severity\nlevel.  Valid severity levels range from 1 (highest severity) to 5 (lowest\nseverity).\n"}],"kind":"subblock"},{"word":"email","info":"email - (Optional) Zero or more email attributes may be present to\ndispatch email to Circonus users by referencing their user ID, or by\nspecifying an email address.  See below for details on supported attributes.","subblock":[],"kind":"subblock"},{"word":"http","info":"http - (Optional) Zero or more http attributes may be present to dispatch\nWebhook/HTTP requests\nby Circonus.  See below for details on supported attributes.","subblock":[{"word":"address","info":"address - (Required) URL to send a webhook request to.\n"},{"word":"format","info":"format - (Optional) The payload of the request is a JSON-encoded payload\nwhen the format is set to json (the default).  The alternate payload\nencoding is params.\n"},{"word":"method","info":"method - (Optional) The HTTP verb to use when making a request.  Either\nGET or POST may be specified. The default verb is POST.\n"}],"kind":"subblock"},{"word":"irc","info":"irc - (Optional) Zero or more irc attributes may be present to dispatch\nIRC notifications to users.  See below for details on supported attributes.","subblock":[{"word":"user","info":"user - (Required) When a user has configured IRC on their user account, they\nwill receive an IRC notification.\n"}],"kind":"subblock"},{"word":"long_message","info":"long_message - (Optional) The bulk of the message used in long form alert\nmessages."},{"word":"long_subject","info":"long_subject - (Optional) The subject used in long form alert messages."},{"word":"long_summary","info":"long_summary - (Optional) The brief summary used in long form alert messages."},{"word":"name","info":"name - (Required) The name of the contact group."},{"word":"pager_duty","info":"pager_duty - (Optional) Zero or more pager_duty attributes may be present\nto dispatch to\nPager Duty teams.\nSee below for details on supported attributes.","subblock":[{"word":"contact_group_fallback","info":"contact_group_fallback - (Optional) If there is a problem contacting\nPagerDuty, relay the notification automatically to the specified Contact Group\n(e.g. /contact_group/1234).\n"},{"word":"service_key","info":"service_key - (Required) The PagerDuty Service Key.\n"},{"word":"webhook_url","info":"webhook_url - (Required) The PagerDuty webhook URL that PagerDuty uses to\nnotify Circonus of acknowledged actions.\n"}],"kind":"subblock"},{"word":"short_message","info":"short_message - (Optional) The subject used in short form alert messages."},{"word":"short_summary","info":"short_summary - (Optional) The brief summary used in short form alert\nmessages."},{"word":"slack","info":"slack - (Optional) Zero or more slack attributes may be present to\ndispatch to Slack teams.  See below for details on supported attributes.","subblock":[{"word":"contact_group_fallback","info":"contact_group_fallback - (Optional) If there is a problem contacting Slack,\nrelay the notification automatically to the specified Contact Group\n(e.g. /contact_group/1234).\n"},{"word":"buttons","info":"buttons - (Optional) Slack notifications can have acknowledgement buttons\nbuilt into the notification message itself when enabled.  Defaults to true.\n"},{"word":"channel","info":"channel - (Required) Specify what Slack channel Circonus should send alerts\nto.\n"},{"word":"team","info":"team - (Required) Specify what Slack team Circonus should look in for the\naforementioned channel.\n"},{"word":"username","info":"username - (Optional) Specify the username Circonus should advertise itself\nas in Slack.  Defaults to Circonus.\n"}],"kind":"subblock"},{"word":"sms","info":"sms - (Optional) Zero or more sms attributes may be present to dispatch\nSMS messages to Circonus users by referencing their user ID, or by specifying\nan SMS Phone Number.  See below for details on supported attributes.","subblock":[],"kind":"subblock"},{"word":"tags","info":"tags - (Optional) A list of tags attached to the Contact Group."},{"word":"victorops","info":"victorops - (Optional) Zero or more victorops attributes may be present\nto dispatch to\nVictorOps teams.\nSee below for details on supported attributes.","subblock":[{"word":"contact_group_fallback","info":"contact_group_fallback - (Optional) If there is a problem contacting\nVictorOps, relay the notification automatically to the specified Contact Group\n(e.g. /contact_group/1234).\n"},{"word":"api_key","info":"api_key - (Required) The API Key for talking with VictorOps.\n"},{"word":"critical","info":"critical - (Required)\n"},{"word":"info","info":"info - (Required)\n"},{"word":"team","info":"team - (Required)\n"},{"word":"warning","info":"warning - (Required)\n"}],"kind":"subblock"}],"attributes":[]},"graph":{"provider":"circonus","arguments":[{"word":"description","info":"description - (Optional) Description of what the graph is for."},{"word":"graph_style","info":"graph_style - (Optional) How the graph should be rendered.  Valid options\nare area or line (default)."},{"word":"left","info":"left - (Optional) A map of graph left axis options.  Valid values in left\ninclude: logarithmic can be set to 0 (default) or 1; min is the min\nY axis value on the left; and max is the Y axis max value on the left."},{"word":"line_style","info":"line_style - (Optional) How the line should change between points.  Can be\neither stepped (default) or interpolated."},{"word":"name","info":"name - (Required) The title of the graph."},{"word":"notes","info":"notes - (Optional) A place for storing notes about this graph."},{"word":"right","info":"right - (Optional) A map of graph right axis options.  Valid values in\nright include: logarithmic can be set to 0 (default) or 1; min is\nthe min Y axis value on the right; and max is the Y axis max value on the\nright."},{"word":"metric","info":"metric - (Optional) A list of metric streams to graph.  See below for\noptions.","subblock":[{"word":"active","info":"active - (Optional) A boolean if the metric stream is enabled or not.\n"},{"word":"alpha","info":"alpha - (Optional) A floating point number between 0 and 1.\n"},{"word":"axis","info":"axis - (Optional) The axis that the metric stream will use.  Valid options\nare left (default) or right.\n"},{"word":"caql","info":"caql - (Optional) A CAQL formula.  Conflicts with the check and metric\nattributes.\n"},{"word":"check","info":"check - (Optional) The check that this metric stream belongs to.\n"},{"word":"color","info":"color - (Optional) A hex-encoded color of the line / area on the graph.\n"},{"word":"formula","info":"formula - (Optional) Formula that should be aplied to both the values in the\ngraph and the legend.\n"},{"word":"legend_formula","info":"legend_formula - (Optional) Formula that should be applied to values in the\nlegend.\n"},{"word":"function","info":"function - (Optional) What derivative value, if any, should be used.  Valid\nvalues are: gauge (default), derive, and counter (_stddev)\n"},{"word":"metric_type","info":"metric_type - (Required) The type of the metric.  Valid values are:\nnumeric, text, histogram, composite, or caql.\n"},{"word":"name","info":"name - (Optional) A name which will appear in the graph legend.\n"},{"word":"metric_name","info":"metric_name - (Optional) The name of the metric stream within the check to\ngraph.\n"},{"word":"stack","info":"stack - (Optional) If this metric is to be stacked, which stack set does it\nbelong to (starting at 0).\n"}],"kind":"subblock"},{"word":"metric_cluster","info":"metric_cluster - (Optional) A metric cluster to graph.  See below for options.","subblock":[],"kind":"subblock"},{"word":"tags","info":"tags - (Optional) A list of tags assigned to this graph."}],"attributes":[]},"metric":{"provider":"circonus","arguments":[{"word":"active","info":"active - (Optional) A boolean indicating if the metric is being filtered out\nat the circonus_check's collector(s) or not."},{"word":"name","info":"name - (Required) The name of the metric.  A name must be unique within a\ncirconus_check and its meaning is circonus_check.type specific."},{"word":"tags","info":"tags - (Optional) A list of tags assigned to the metric."},{"word":"type","info":"type - (Required) The type of metric.  This value must be present and can be\none of the following values: numeric, text, histogram, composite, or\ncaql."},{"word":"unit","info":"unit - (Optional) The unit of measurement for this circonus_metric."}],"attributes":[]},"metric_cluster":{"provider":"circonus","arguments":[{"word":"description","info":"description - (Optional) A long-form description of the metric cluster."},{"word":"name","info":"name - (Required) The name of the metric cluster.  This name must be unique\nacross all metric clusters in a given Circonus Account."},{"word":"query","info":"query - (Required) One or more query attributes must be present.  Each\nquery must contain both a definition and a type.  See below for details\non supported attributes.","subblock":[{"word":"definition","info":"definition - (Required) The definition of a metric cluster query.\n"},{"word":"type","info":"type - (Required) The query type to execute per metric cluster.  Valid query\ntypes are: average, count, counter, counter2, counter2_stddev,\ncounter_stddev, derive, derive2, derive2_stddev, derive_stddev,\nhistogram, stddev, text.\n"}],"kind":"subblock"},{"word":"tags","info":"tags - (Optional) A list of tags attached to the metric cluster."}],"attributes":[]},"rule_set":{"provider":"circonus","arguments":[{"word":"check","info":"check - (Required) The Circonus ID that this Rule Set will use to search for\na metric stream to alert on."},{"word":"if","info":"if - (Required) One or more ordered predicate clauses that describe when\nCirconus should generate a notification.  See below for details on the\nstructure of an if configuration clause.","subblock":[],"kind":"subblock"},{"word":"link","info":"link - (Optional) A link to external documentation (or anything else you\nfeel is important) when a notification is sent.  This value will show up in\nemail alerts and the Circonus UI."},{"word":"metric_type","info":"metric_type - (Optional) The type of metric this rule set will operate on.\nValid values are numeric (the default) and text.","subblock":[],"kind":"subblock"},{"word":"notes","info":"notes - (Optional) Notes about this rule set."},{"word":"parent","info":"parent - (Optional) A Circonus Metric ID that, if specified and active with\na severity 1 alert, will silence this rule set until all of the severity 1\nalerts on the parent clear.  This value must match the format\n${check_id}_${metric_name}."},{"word":"metric_name","info":"metric_name - (Required) The name of the metric stream within a given check\nthat this rule set is active on."},{"word":"tags","info":"tags - (Optional) A list of tags assigned to this rule set."}],"attributes":[]}},"datas":{"account":{"provider":"circonus","arguments":[{"word":"id","info":"id - (Optional) The Circonus ID of a given account.\n"},{"word":"current","info":"current - (Optional) Automatically use the current Circonus Account attached\nto the API token making the request.\n"}],"attributes":[{"word":"address1","info":"address1 - The first line of the address associated with the account.\n"},{"word":"address2","info":"address2 - The second line of the address associated with the account.\n"},{"word":"cc_email","info":"cc_email - An optionally specified email address used in the CC line of invoices.\n"},{"word":"id","info":"id - The Circonus ID of the selected Account.\n"},{"word":"city","info":"city - The city part of the address associated with the account.\n"},{"word":"contact_groups","info":"contact_groups - A list of IDs for each contact group in the account.\n"},{"word":"country","info":"country - The country of the user's address.\n"},{"word":"description","info":"description - Description of the account.\n"},{"word":"invites","info":"invites - An list of users invited to use the platform.  Each element in the\nlist has both an email and role attribute.\n"},{"word":"name","info":"name - The name of the account.\n"},{"word":"owner","info":"owner - The Circonus ID of the user who owns this account.\n"},{"word":"state_prov","info":"state_prov - The state or province of the address associated with the account.\n"},{"word":"timezone","info":"timezone - The timezone that events will be displayed in the web interface\nfor this account.\n"},{"word":"ui_base_url","info":"ui_base_url - The base URL of this account.\n"},{"word":"usage","info":"usage - A list of account usage limits.  Each element in the list will have\na limit attribute, a limit type, and a used attribute.\n"},{"word":"users","info":"users - A list of users who have access to this account.  Each element in\nthe list has both an id and a role.  The id is a Circonus ID referencing\nthe user.\n"}]},"collector":{"provider":"circonus","arguments":[{"word":"id","info":"id - (Optional) The Circonus ID of a given collector.\n"}],"attributes":[{"word":"id","info":"id - The Circonus ID of the selected Collector.\n"},{"word":"details","info":"details - A list of details about the individual Collector instances that\nmake up the group of collectors.  See below for a list of attributes within\neach collector.\n"},{"word":"latitude","info":"latitude - The latitude of the selected Collector.\n"},{"word":"longitude","info":"longitude - The longitude of the selected Collector.\n"},{"word":"name","info":"name - The name of the selected Collector.\n"},{"word":"tags","info":"tags - A list of tags assigned to the selected Collector.\n"},{"word":"type","info":"type - The of the selected Collector.  This value is either circonus for a\nCirconus-managed, public Collector, or enterprise for a private collector that is\nprivate to an account.\n"}]}},"unknowns":{}}