{"provider_arguments":[],"resources":{"private_key":{"provider":"tls","arguments":[{"word":"algorithm","info":"algorithm - (Required) The name of the algorithm to use for\nthe key. Currently-supported values are \"RSA\" and \"ECDSA\"."},{"word":"rsa_bits","info":"rsa_bits - (Optional) When algorithm is \"RSA\", the size of the generated\nRSA key in bits. Defaults to 2048."},{"word":"ecdsa_curve","info":"ecdsa_curve - (Optional) When algorithm is \"ECDSA\", the name of the elliptic\ncurve to use. May be any one of \"P224\", \"P256\", \"P384\" or \"P521\", with \"P224\" as the\ndefault."}],"attributes":[{"word":"algorithm","info":"algorithm - The algorithm that was selected for the key.\n"},{"word":"private_key_pem","info":"private_key_pem - The private key data in PEM format.\n"},{"word":"public_key_pem","info":"public_key_pem - The public key data in PEM format.\n"},{"word":"public_key_openssh","info":"public_key_openssh - The public key data in OpenSSH authorized_keys\nformat, if the selected private key format is compatible. All RSA keys\nare supported, and ECDSA keys with curves \"P256\", \"P384\" and \"P251\"\nare supported. This attribute is empty if an incompatible ECDSA curve\nis selected.\n"}]},"self_signed_cert":{"provider":"tls","arguments":[{"word":"key_algorithm","info":"key_algorithm - (Required) The name of the algorithm for the key provided\nin private_key_pem."},{"word":"private_key_pem","info":"private_key_pem - (Required) PEM-encoded private key data. This can be\nread from a separate file using the file interpolation function. If the\ncertificate is being generated to be used for a throwaway development\nenvironment or other non-critical application, the tls_private_key resource\ncan be used to generate a TLS private key from within Terraform. Only\nan irreversable secure hash of the private key will be stored in the Terraform\nstate."},{"word":"subject","info":"subject - (Required) The subject for which a certificate is being requested.\nThis is a nested configuration block whose structure matches the\ncorresponding block for tls_cert_request."},{"word":"validity_period_hours","info":"validity_period_hours - (Required) The number of hours after initial issuing that the\ncertificate will become invalid."},{"word":"allowed_uses","info":"allowed_uses - (Required) List of keywords each describing a use that is permitted\nfor the issued certificate. The valid keywords are listed below.","subblock":[{"word":"digital_signature","info":"digital_signature\n"},{"word":"content_commitment","info":"content_commitment\n"},{"word":"key_encipherment","info":"key_encipherment\n"},{"word":"data_encipherment","info":"data_encipherment\n"},{"word":"key_agreement","info":"key_agreement\n"},{"word":"cert_signing","info":"cert_signing\n"},{"word":"crl_signing","info":"crl_signing\n"},{"word":"encipher_only","info":"encipher_only\n"},{"word":"decipher_only","info":"decipher_only\n"},{"word":"any_extended","info":"any_extended\n"},{"word":"server_auth","info":"server_auth\n"},{"word":"client_auth","info":"client_auth\n"},{"word":"code_signing","info":"code_signing\n"},{"word":"email_protection","info":"email_protection\n"},{"word":"ipsec_end_system","info":"ipsec_end_system\n"},{"word":"ipsec_tunnel","info":"ipsec_tunnel\n"},{"word":"ipsec_user","info":"ipsec_user\n"},{"word":"timestamping","info":"timestamping\n"},{"word":"ocsp_signing","info":"ocsp_signing\n"},{"word":"microsoft_server_gated_crypto","info":"microsoft_server_gated_crypto\n"},{"word":"netscape_server_gated_crypto","info":"netscape_server_gated_crypto\n"}],"kind":"subblock"},{"word":"dns_names","info":"dns_names - (Optional) List of DNS names for which a certificate is being requested."},{"word":"ip_addresses","info":"ip_addresses - (Optional) List of IP addresses for which a certificate is being requested."},{"word":"early_renewal_hours","info":"early_renewal_hours - (Optional) If set, the resource will consider the certificate to\nhave expired the given number of hours before its actual expiry time. This can be useful\nto deploy an updated certificate in advance of the expiration of the current certificate.\nNote however that the old certificate remains valid until its true expiration time, since\nthis resource does not (and cannot) support certificate revocation. Note also that this\nadvance update can only be performed should the Terraform configuration be applied during the\nearly renewal period."},{"word":"is_ca_certificate","info":"is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the\ngenerated certificate. Defaults to false, meaning that the certificate does not represent\na certificate authority."}],"attributes":[{"word":"cert_pem","info":"cert_pem - The certificate data in PEM format.\n"},{"word":"validity_start_time","info":"validity_start_time - The time after which the certificate is valid, as an\nRFC3339 timestamp.\n"},{"word":"validity_end_time","info":"validity_end_time - The time until which the certificate is invalid, as an\nRFC3339 timestamp.\n"}]},"locally_signed_cert":{"provider":"tls","arguments":[{"word":"cert_request_pem","info":"cert_request_pem - (Required) PEM-encoded request certificate data."},{"word":"ca_key_algorithm","info":"ca_key_algorithm - (Required) The name of the algorithm for the key provided\nin ca_private_key_pem."},{"word":"ca_private_key_pem","info":"ca_private_key_pem - (Required) PEM-encoded private key data for the CA.\nThis can be read from a separate file using the file interpolation\nfunction."},{"word":"ca_cert_pem","info":"ca_cert_pem - (Required) PEM-encoded certificate data for the CA."},{"word":"validity_period_hours","info":"validity_period_hours - (Required) The number of hours after initial issuing that the\ncertificate will become invalid."},{"word":"allowed_uses","info":"allowed_uses - (Required) List of keywords each describing a use that is permitted\nfor the issued certificate. The valid keywords are listed below.","subblock":[{"word":"digital_signature","info":"digital_signature\n"},{"word":"content_commitment","info":"content_commitment\n"},{"word":"key_encipherment","info":"key_encipherment\n"},{"word":"data_encipherment","info":"data_encipherment\n"},{"word":"key_agreement","info":"key_agreement\n"},{"word":"cert_signing","info":"cert_signing\n"},{"word":"crl_signing","info":"crl_signing\n"},{"word":"encipher_only","info":"encipher_only\n"},{"word":"decipher_only","info":"decipher_only\n"},{"word":"any_extended","info":"any_extended\n"},{"word":"server_auth","info":"server_auth\n"},{"word":"client_auth","info":"client_auth\n"},{"word":"code_signing","info":"code_signing\n"},{"word":"email_protection","info":"email_protection\n"},{"word":"ipsec_end_system","info":"ipsec_end_system\n"},{"word":"ipsec_tunnel","info":"ipsec_tunnel\n"},{"word":"ipsec_user","info":"ipsec_user\n"},{"word":"timestamping","info":"timestamping\n"},{"word":"ocsp_signing","info":"ocsp_signing\n"},{"word":"microsoft_server_gated_crypto","info":"microsoft_server_gated_crypto\n"},{"word":"netscape_server_gated_crypto","info":"netscape_server_gated_crypto\n"}],"kind":"subblock"},{"word":"early_renewal_hours","info":"early_renewal_hours - (Optional) If set, the resource will consider the certificate to\nhave expired the given number of hours before its actual expiry time. This can be useful\nto deploy an updated certificate in advance of the expiration of the current certificate.\nNote however that the old certificate remains valid until its true expiration time, since\nthis resource does not (and cannot) support certificate revocation. Note also that this\nadvance update can only be performed should the Terraform configuration be applied during the\nearly renewal period."},{"word":"is_ca_certificate","info":"is_ca_certificate - (Optional) Boolean controlling whether the CA flag will be set in the\ngenerated certificate. Defaults to false, meaning that the certificate does not represent\na certificate authority."}],"attributes":[{"word":"cert_pem","info":"cert_pem - The certificate data in PEM format.\n"},{"word":"validity_start_time","info":"validity_start_time - The time after which the certificate is valid, as an\nRFC3339 timestamp.\n"},{"word":"validity_end_time","info":"validity_end_time - The time until which the certificate is invalid, as an\nRFC3339 timestamp.\n"}]},"cert_request":{"provider":"tls","arguments":[{"word":"key_algorithm","info":"key_algorithm - (Required) The name of the algorithm for the key provided\nin private_key_pem."},{"word":"private_key_pem","info":"private_key_pem - (Required) PEM-encoded private key data. This can be\nread from a separate file using the file interpolation function. Only\nan irreversable secure hash of the private key will be stored in the Terraform\nstate."},{"word":"subject","info":"subject - (Required) The subject for which a certificate is being requested. This is\na nested configuration block whose structure is described below.","subblock":[{"word":"common_name","info":"common_name (string)\n"},{"word":"organization","info":"organization (string)\n"},{"word":"organizational_unit","info":"organizational_unit (string)\n"},{"word":"street_address","info":"street_address (list of strings)\n"},{"word":"locality","info":"locality (string)\n"},{"word":"province","info":"province (string)\n"},{"word":"country","info":"country (string)\n"},{"word":"postal_code","info":"postal_code (string)\n"},{"word":"serial_number","info":"serial_number (string)\n"}],"kind":"subblock"},{"word":"dns_names","info":"dns_names - (Optional) List of DNS names for which a certificate is being requested."},{"word":"ip_addresses","info":"ip_addresses - (Optional) List of IP addresses for which a certificate is being requested."}],"attributes":[{"word":"cert_request_pem","info":"cert_request_pem - The certificate request data in PEM format.\n"}]}},"datas":{},"unknowns":{}}