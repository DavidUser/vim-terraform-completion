{"provider_arguments":[{"word":"address","info":"address - (Optional) Terraform Enterprise server endpoint. Defaults to\npublic Terraform Enterprise. This is only required when using an on-premise\ndeployment of Terraform Enterprise. This can also be specified with the\nATLAS_ADDRESS shell environment variable.\n"},{"word":"token","info":"token - (Required) API token. This can also be specified with the\nATLAS_TOKEN shell environment variable.\n"}],"resources":{"atlas_artifact":{"provider":"terraform-enterprise","arguments":[{"word":"name","info":"name - (Required) Name of the artifact in Terraform Enterprise. This is given\nin slug format like \"organization/artifact\"."},{"word":"type","info":"type - (Required) The type of artifact to query for."},{"word":"build","info":"build - (Optional) The build number responsible for creating\nthe version of the artifact to filter on. This can be \"latest\",\nto find a matching artifact in the latest build, \"any\" to find a\nmatching artifact in any build, or a specific number to pin to that\nbuild. If build and version are unspecified, version will default\nto \"latest\". Cannot be specified with version. Note: build is only\npresent if Terraform Enterprise builds the image."},{"word":"version","info":"version - (Optional)  The version of the artifact to filter on. This can\nbe \"latest\", to match against the latest version, \"any\" to find a matching artifact\nin any version, or a specific number to pin to that version. Defaults to\n\"latest\" if neither build or version is specified. Cannot be specified\nwith build."},{"word":"metadata_keys","info":"metadata_keys - (Optional) If given, only an artifact containing\nthe given keys will be returned. This is used to disambiguate when\nmultiple potential artifacts match. An example is \"aws\" to filter\non an AMI."},{"word":"metadata","info":"metadata - (Optional) If given, only an artifact matching the\nmetadata filters will be returned. This is used to disambiguate when\nmultiple potential artifacts match. An example is \"arch\" = \"386\" to\nfilter on architecture."}],"attributes":[{"word":"id","info":"id - The ID of the artifact. This could be an AMI ID, GCE Image ID, etc.\n"},{"word":"file_url","info":"file_url - For artifacts that are binaries, this is a download path.\n"},{"word":"metadata_full","info":"metadata_full - Contains the full metadata of the artifact. The keys are sanitized\nto replace any characters that are invalid in a resource name with a hyphen.\nFor example, the \"region.us-east-1\" key will become \"region-us-east-1\".\n"},{"word":"version_real","info":"version_real - The matching version of the artifact\n"},{"word":"slug","info":"slug - The artifact slug in Terraform Enterprise\n"}]}},"datas":{"atlas_artifact":{"provider":"terraform-enterprise","arguments":[{"word":"name","info":"name - (Required) Name of the artifact in Terraform Enterprise. This is given\nin slug format like \"organization/artifact\"."},{"word":"type","info":"type - (Required) The type of artifact to query for."},{"word":"build","info":"build - (Optional) The build number responsible for creating\nthe version of the artifact to filter on. This can be \"latest\",\nto find a matching artifact in the latest build, \"any\" to find a\nmatching artifact in any build, or a specific number to pin to that\nbuild. If build and version are unspecified, version will default\nto \"latest\". Cannot be specified with version. Note: build is only\npresent if Terraform Enterprise builds the image."},{"word":"version","info":"version - (Optional)  The version of the artifact to filter on. This can\nbe \"latest\", to match against the latest version, \"any\" to find a matching artifact\nin any version, or a specific number to pin to that version. Defaults to\n\"latest\" if neither build or version is specified. Cannot be specified\nwith build."},{"word":"metadata_keys","info":"metadata_keys - (Optional) If given, only an artifact containing\nthe given keys will be returned. This is used to disambiguate when\nmultiple potential artifacts match. An example is \"aws\" to filter\non an AMI."},{"word":"metadata","info":"metadata - (Optional) If given, only an artifact matching the\nmetadata filters will be returned. This is used to disambiguate when\nmultiple potential artifacts match. An example is \"arch\" = \"386\" to\nfilter on architecture."}],"attributes":[{"word":"id","info":"id - The ID of the artifact. This could be an AMI ID, GCE Image ID, etc.\n"},{"word":"file_url","info":"file_url - For artifacts that are binaries, this is a download path.\n"},{"word":"metadata_full","info":"metadata_full - Contains the full metadata of the artifact. The keys are sanitized\nto replace any characters that are invalid in a resource name with a hyphen.\nFor example, the \"region.us-east-1\" key will become \"region-us-east-1\".\n"},{"word":"version_real","info":"version_real - The matching version of the artifact\n"},{"word":"slug","info":"slug - The artifact slug in Terraform Enterprise\n"}]}},"unknowns":{}}