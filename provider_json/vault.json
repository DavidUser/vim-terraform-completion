{"provider_arguments":[],"resources":{"generic_secret":{"provider":"vault","arguments":[{"word":"path","info":"path - (Required) The full logical path at which to write the given\ndata. To write data into the \"generic\" secret backend mounted in Vault by\ndefault, this should be prefixed with secret/. Writing to other backends\nwith this resource is possible; consult each backend's documentation to\nsee which endpoints support the PUT and DELETE methods.","kind":"String(R)"},{"word":"data_json","info":"data_json - (Required) String containing a JSON-encoded object that\nwill be written as the secret data at the given path.","kind":"String(R)"},{"word":"allow_read","kind":"Bool(O)"}],"attributes":[]},"policy":{"provider":"vault","arguments":[{"word":"name","info":"name - (Required) The name of the policy","kind":"String(R)"},{"word":"policy","kind":"String(R)"}],"attributes":[]}},"datas":{"generic_secret":{"provider":"vault","arguments":[{"word":"path","kind":"String(R)"}],"attributes":[{"word":"data_json","info":"data_json - A string containing the full data payload retrieved from\nVault, serialized in JSON format.\n"},{"word":"data","info":"data - A mapping whose keys are the top-level data keys returned from\nVault and whose values are the corresponding values. This map can only\nrepresent string data, so any non-string values returned from Vault are\nserialized as JSON.\n"},{"word":"lease_id","info":"lease_id - The lease identifier assigned by Vault, if any.\n"},{"word":"lease_duration","info":"lease_duration - The duration of the secret lease, in seconds relative\nto the time the data was requested. Once this time has passed any plan\ngenerated with this data may fail to apply.\n"},{"word":"lease_start_time","info":"lease_start_time - As a convenience, this records the current time\non the computer where Terraform is running when the data is requested.\nThis can be used to approximate the absolute time represented by\nlease_duration, though users must allow for any clock drift and response\nlatency relative to to the Vault server.\n"},{"word":"lease_renewable","info":"lease_renewable - true if the lease can be renewed using Vault's\nsys/renew/{lease-id} endpoint. Terraform does not currently support lease\nrenewal, and so it will request a new lease each time this data source is\nrefreshed.\n"}]}},"unknowns":{}}